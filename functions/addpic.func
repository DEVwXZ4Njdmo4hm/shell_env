#!/bin/sh
# Created by zijian at 2022-10-11 21:52:01
function addrdpic() {
	local top_dir=$HOME/pics/random
	local new_dir=0
	
	if [[ -z $(ls $top_dir) ]];
	then
		echo "empty directory."
		mkdir "${top_dir}/${new_dir}"
	else
		local dir_arr=()
		local old_ifs=$IFS
	
		for i in $(ls $top_dir/);
		do
			dir_arr+=($i)
		done

		IFS=$'\n' 
		local new_dir=$(( $( echo "${dir_arr[*]}" | sort -nr | head -n1 ) + 1 )) 
		IFS=$old_ifs 
		mkdir -pv "${top_dir}/${new_dir}"
	fi
	
	local max_retry=500
	local count=100
	local index=1
	local save_dir=${top_dir}/${new_dir}
	local retry=0

	[[ $# -eq 1 ]] && count=$1

	echo "You are calling addrdpic, you requested amount of pictures is ${count}"
	echo "Saving pictures to ${save_dir}"
	echo
	echo
	echo '-------------------------------------------'

	while [[ $index -le $count ]];
	do
		/usr/bin/wget "http://api.iw233.cn/api.php?sort=sw" -O "${save_dir}/${index}.jpg" &>/dev/null
		if [[ $? -eq 0 ]];
		then
			echo "Successfully fetched ${index}.jpg, [${index}/${count}]"
			index=$(( $index + 1 ))
		else
			echo "Failed, re-fetch ${index}.jpg, [${index}/${count}]"
			rm -f ${save_dir}/${index}.jpg
			retry=$(( $retry + 1 ))
			[[ $retry -eq $max_retry ]] && break
		fi
	done

	echo '-------------------------------------------'
	echo "Done"
}

function addbspic() {
	local top_dir=$HOME/pics/bs
	local new_dir=0 
	if [[ -z $(ls $top_dir) ]]
	then
		echo "empty directory."
		mkdir -pv "${top_dir}/${new_dir}"
	else
		local dir_arr=() 
		local old_ifs=$IFS 
		for i in $(ls $top_dir/)
		do
			dir_arr+=($i) 
		done
		IFS=$'\n' 
		local new_dir=$(( $( echo "${dir_arr[*]}" | sort -nr | head -n1 ) + 1 )) 
		IFS=$old_ifs 
		mkdir -pv -pv "${top_dir}/${new_dir}"
	fi
	local max_retry=500 
	local count=100 
	local index=1 
	local save_dir=${top_dir}/${new_dir} 
	local retry=0 
	[[ $# -eq 1 ]] && count=$1 
	echo "You are calling addbspic, you requested amount of pictures is ${count}"
	echo "Saving pictures to ${save_dir}"
	echo
	echo
	echo '-------------------------------------------'


	while [[ $index -le $count ]];
	do
		wget "http://api.iw233.cn/api.php?sort=swbs" -O "${save_dir}/${index}.jpg" &>/dev/null
		if [[ $? -eq 0 ]];
		then
			echo "Successfully fetched ${index}.jpg, [${index}/${count}]"
			index=$(( $index + 1 ))
		else
			rm -f ${save_dir}/${index}.jpg
			retry=$(( $retry + 1 ))
			[[ $retry -eq $max_retry ]] && break
		fi
	done

	echo '-------------------------------------------'
	echo "Done"
}

function addhspic() {
	local top_dir=$HOME/pics/hs
	local new_dir=0 
	if [[ -z $(ls $top_dir) ]]
	then
		echo "empty directory."
		mkdir -pv "${top_dir}/${new_dir}"
	else
		local dir_arr=() 
		local old_ifs=$IFS 
		for i in $(ls $top_dir/)
		do
			dir_arr+=($i) 
		done
		IFS=$'\n' 
		local new_dir=$(( $( echo "${dir_arr[*]}" | sort -nr | head -n1 ) + 1 )) 
		IFS=$old_ifs 
		mkdir -pv -pv "${top_dir}/${new_dir}"
	fi
	local max_retry=500 
	local count=100 
	local index=1 
	local save_dir=${top_dir}/${new_dir} 
	local retry=0 
	[[ $# -eq 1 ]] && count=$1 
	echo "You are calling addhspic, you requested amount of pictures is ${count}"
	echo "Saving pictures to ${save_dir}"
	echo
	echo
	echo '-------------------------------------------'


	while [[ $index -le $count ]];
	do
		wget "http://api.iw233.cn/api.php?sort=swhs" -O "${save_dir}/${index}.jpg" &>/dev/null
		if [[ $? -eq 0 ]];
		then
			echo "Successfully fetched ${index}.jpg, [${index}/${count}]"
			index=$(( $index + 1 ))
		else
			rm -f ${save_dir}/${index}.jpg
			retry=$(( $retry + 1 ))
			[[ $retry -eq $max_retry ]] && break
		fi
	done

	echo '-------------------------------------------'
	echo "Done"
}
