#!/bin/sh
# Created by zijian at 2022-06-28 14:30:10
function repoupdate() {
	source "${HOME}/.env/functions/macro/colors"
	local retry=0
	printf "Testing network..."
	/usr/bin/wget -q --spider google.com
	if [[ $? -ne 0 ]];
	then
		echo "	FAILED!"
		echo "It seems you current have not any active network!"
		echo "EXIT!"
		return -1
	else
		echo "	OK!"
	fi

	mirror=$(sed -n '/^sync-uri = /{s/^sync-uri = //;p}' /etc/portage/repos.conf/gentoo.conf)
	if [[ $USE_GENTOO -eq 1 ]];
	then
		while
			echo "Permission authentication is in progress."
			sleep 0.5
			sudo echo xxc &>/dev/null
			if [[ $? -ne 0 ]]; then echo "Failed at permission authentication"; return 1; fi
			echo "updating repositories..."
			sleep 0.3
			echo -en "sync remote ebuild tree from ${RED}${BOLD}${mirror}${NoColor}${NORM}? [y/n]:"
			sudo /usr/sbin/emaint sync -A &>/dev/null;
			if [[ $? -eq 0 ]];
			then
				echo "successfully sync remote ebuild tree!"
				if [[ $# -eq 1 && $1 == "extra" ]];
				then
					echo "now checking new xanmod kernel and thunderbird beta source"
					sudo /usr/sbin/XanmodVersionChecker &>/dev/null
					sudo /usr/sbin/ThunderbirdBetaChecker &>/dev/null
				fi
			else
				echo "failed on syncing remote ebuild tree, retrying."
				$?=1
			fi
			
			[[ $? -ne 0 ]];
		do
			echo "repositories update operate failed."
			retry=$(( ${retry} + 1 ))
			[[ ${retry} -gt $REPOUPDATE_RETRY_MAX ]] && {
				echo "Retry times have exceeded the limit, exit 2."
				echo "repoupdate operation failed on ebuild updating phase."
				return 2
			}
			
			echo "retrying..."
		done
		
		echo "Successfully update all repositories!"
		local retry=0
		command -v eix &>/dev/null
		if [[ $? -eq 0 ]];
		then
			while
				printf "Update local ebuild tree index..."
				/usr/bin/eix-update &>/dev/null
				[[ $? -ne 0 ]];
			do
				echo "	FAILED!"
				retry=$(( ${retry} + 1 ))
				[[ ${retry} -gt $REPOUPDATE_RETRY_MAX ]] && {
					echo "Retry times have exceeded the limit, exit 3."
					echo "repoupdate operation failed on local index update phase."
					return 3
				}
				echo
				echo "retrying..."
			done

			echo "	OK!"
			local retry=0
			while
				printf "Updating remote ebuild tree index..."
				/usr/bin/eix-remote update &>/dev/null
				[[ $? -ne 0 ]];
			do
				echo "	FAILED!"
				retry=$(( ${retry} + 1 ))
				[[ ${retry} -gt $REPOUPDATE_RETRY_MAX ]] && {
					echo "Retry times have exceeded the limit, exit 4."
					echo "repoupdate operation failed on remote index update phase."
					return 4
				}
				echo "retrying"
			done

			echo "	OK!"
		else
			echo "It seems eix is not installed on this machine."
			echo "emerge eix if you want to get better package query experience."
		fi
	fi

	local upgradable=$(wc -l <<< $(/usr/bin/eix "-u#"))
	echo -e "There are ${CYAN}${BOLD}${upgradable}${NORM}${NoColor} software packages that can be upgraded."
	if [[ ${upgradable} -ge $REPOUPDATE_SUGGESTED_UPGRADE_PKG_COUNT ]];
	then
		echo "Due to upgradable software in your system has been greater than or equal to ${REPOUPDATE_SUGGESTED_UPGRADE_PKG_COUNT}."
		echo "repoupdate recommands that you do a complete system upgrade."

		while
			if [[ ! -z $BASH_VERSION ]];
			then
				read -p "Do you want to do it? [Y/n]: " reply
			elif [[ ! -z $ZSH_VERSION ]];
			then
				read "reply?Do you want to do it? [Y/n]: "
			fi
			
			[[ ! $reply =~ ^[YyNn"YES""Yes""yes""NO""No""no"]$ ]]
		do
			echo "Unrecognized input :\"$replay\", try again."
		done

		if [[ $reply =~ ^[Yy] ]];
		then
			while
				op_flag=0
				echo "Permission authentication is in progress..."
				sudo echo "xxz" &> /dev/null
				[[ $? -eq 0 ]] && op_flag=1
				[[ $op_flag -eq 0 ]]
			do
				retry=$(( ${retry} + 1 ))
				if [[ $retry -gt $REPOUPDATE_RETRY_MAX ]];
				then
					echo "Retry times has exceeded the limit, exit with 5."
					return 5
				fi

				echo "Failed at permission authentication, retry."
			done

			if [[ $op_flag -eq 1 ]];
			then
				echo "Performing system upgrade."
				sudo /usr/bin/emerge -avquUDN world
			fi
		else
			echo "You rejected system upgrade."
		fi
	fi	

	return 0
}
