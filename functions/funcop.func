#!/bin/sh

function newfunc() {
	if [[ $# -eq 0 ]];
	then
		echo "You must specific a name."
		return 1
	fi
	
	local nf="$HOME/.env/functions/$1.func"

	if [[ -f $nf ]];
	then
		echo "function $1 is exist in functions directory."
		sleep 0.2
		echo "now edit mode."
		sleep 0.5
		${EDITOR} $nf
		envup $1
		return $?
	fi

	local create_date=$(date +"%Y-%m-%d %H:%M:%S")
	touch $nf
	echo "#!/bin/sh" >> $nf
	echo "# Created by $USER at ${create_date}">> $nf
	echo >> $nf
	echo "function $1() {" >> $nf
	echo >> $nf
	echo "}" >> $nf
	${EDITOR} $nf

	envup "$1.func"
	return $?
}

function editfunc() {
	if [[ $# -eq 0 ]];
	then
		echo "You must specific a name"
		return 1
	fi

	local nf="$HOME/.env/functions/$1.func"

	if [[ -f $nf ]];
	then
		${EDITOR} $nf
		envup "$1.func"
		return $?
	else
		echo "$1 is not exist in functions directory."
		return 2
	fi
}

function rmfunc() {
	if [[ $# -eq 0 ]];
	then
		echo "You must specific a name."
		return 1
	fi

	local nf="$HOME/.env/functions/$1.func"
	rm -vf $nf
	envup "$1.func"
	return $?
}

function viewfunc() {
	if [[ $# -eq 0 ]];
	then
		echo "You must specific a name"
		return 1
	fi

	if declare -f $1 >/dev/null;
	then
		/usr/bin/bat -l sh --file-name=$1 <<< $(declare -f $1)
	else
		echo "$1 is not defined."
	fi
}

function listfunc() {
	for i in $(typeset +f); do
		if [[ $(type ${i}) =~ "/.env/functions/" ]];
		then
			echo ${i}
		fi
	done
}
